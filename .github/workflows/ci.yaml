name: Dummy Package Release

on:
  push:
    # Trigger the workflow on push to the main branch
    branches:
      - main
  # Optionally, you could trigger the pipeline manually:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # You can adjust the version if needed

      # Install dependencies (if any)
      - name: Install dependencies
        run: |
          pip install --upgrade pip

      # Build the dummy package (for example, creating a .tar.gz file)
      - name: Build package
        run: |
          mkdir dist
          echo "dummy-package" > dist/dummy-package.txt  # Creating a dummy file to simulate a package

      # Create a new Git tag for the release (e.g., v1.0.0)
      - name: Create a new tag
        id: tag
        run: |
          VERSION="v1.0.0"
          git tag $VERSION
          git push origin $VERSION

      # Create a GitHub release using the new tag
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*  # Attach the dummy package file created earlier
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Optionally, publish to a package repository like PyPI (Uncomment if using PyPI)
      # - name: Publish to PyPI
      #   run: |
      #     pip install twine
      #     twine upload dist/*  # Upload your package to PyPI
      #   env:
      #     TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
